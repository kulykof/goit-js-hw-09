{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFM,WAAWF,EAASL,EAAO,C,SAAED,E,MAAUC,IAEvCO,WAAWD,EAAQN,EAAO,C,SAAED,E,MAAUC,GAAQ,G,CAMpD,SAASQ,EAAcT,EAAUC,GAC/BJ,EAAAa,OAAOC,QAAQ,sBAAoBX,QAAiBC,MAAW,CAC3DW,QAAO,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,CAIxB,SAASC,EAAchB,EAAUC,GAC/BJ,EAAAa,OAAOO,QAAQ,uBAAqBjB,QAAeC,MAAW,CAC5DW,QAAS,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,EAjDX,CACXG,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,MACEtB,OAASuB,MAAOC,GAChBC,MAAQF,MAAOG,GACfC,QAAUJ,MAAOK,IACfP,EAAEQ,cAAcC,SAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EAAG,CACxC,MAAMC,EAAeC,OAAOT,GAAcO,EAAIL,EAC9C5B,EAAciC,EAAGC,GACdE,MAAK,EAACnC,SAAEA,EAAQC,MAAEA,KAAYe,EAAchB,EAAUC,KACtDmC,OAAM,EAACpC,SAAEA,EAAQC,MAAEA,KAAYQ,EAAcT,EAAUC,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    delay: { value: delayValue },\n    step: { value: stepValue },\n    amount: { value: amountValue }\n  } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const currentDelay = Number(delayValue) + i * stepValue;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => notifySuccess(position, delay))\n      .catch(({ position, delay }) => notifyFailure(position, delay));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(resolve, delay, { position, delay });\n    } else {\n      setTimeout(reject, delay, { position, delay });\n    }\n  });\n\n}\n\nfunction notifyFailure(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}\n\nfunction notifySuccess(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$notifyFailure","Notify","failure","timeout","clickToClose","pauseOnHover","showOnlyTheLastOne","$47d4ff9957288465$var$notifySuccess","success","form","document","querySelector","addEventListener","e","preventDefault","value","delayValue","step","stepValue","amount","amountValue","currentTarget","elements","i","currentDelay","Number","then","catch"],"version":3,"file":"03-promises.daac07fe.js.map"}