{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFM,WAAWF,EAASL,EAAO,CAAED,WAAUC,UAEvCO,WAAWD,EAAQN,EAAO,CAAED,WAAUC,S,IAM5C,SAASQ,EAAcT,EAAUC,GAC/BJ,EAAAa,OAAOC,QAAQ,sBAAuCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC7DY,QAAO,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,CAIxB,SAASC,EAAcjB,EAAUC,GAC/BJ,EAAAa,OAAOQ,QAAQ,uBAAsCN,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC9DY,QAAS,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,EAjDX,CACXG,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAQF,IANA,IAIIC,EAAAF,EAAEG,cAAcC,SAHTC,EAGPH,EAHFxB,MAAS4B,MACDC,EAENL,EAFFM,KAAQF,MACEG,EACRP,EADFQ,OAAUJ,MAGHK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CACxC,IAAMC,EAAeC,OAAOR,GAAcM,EAAIJ,EAC9C/B,EAAcmC,EAAGC,GACdE,MAAK,SAAAC,G,OAAyBrB,EAAdqB,EAARtC,SAAesC,EAALrC,M,IAClBsC,OAAM,SAAAD,G,OAAyB7B,EAAd6B,EAARtC,SAAesC,EAALrC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    delay: { value: delayValue },\n    step: { value: stepValue },\n    amount: { value: amountValue }\n  } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const currentDelay = Number(delayValue) + i * stepValue;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => notifySuccess(position, delay))\n      .catch(({ position, delay }) => notifyFailure(position, delay));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(resolve, delay, { position, delay });\n    } else {\n      setTimeout(reject, delay, { position, delay });\n    }\n  });\n\n}\n\nfunction notifyFailure(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}\n\nfunction notifySuccess(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$notifyFailure","Notify","failure","concat","timeout","clickToClose","pauseOnHover","showOnlyTheLastOne","$ce04d3a99e08e73b$var$notifySuccess","success","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delayValue","value","stepValue","step","amountValue","amount","i","currentDelay","Number","then","param","catch"],"version":3,"file":"03-promises.acdaae1c.js.map"}